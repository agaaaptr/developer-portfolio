@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
    background-color: #1a202c; /* Fallback for html */
  }
  
  body {
    min-height: 100vh; /* Ensure body always takes full viewport height */
    background: linear-gradient(135deg, var(--color-start, #1a202c), var(--color-end, #2d3748));
    background-size: 400% 400%;
    animation: gradientShift 15s ease infinite;
    @apply text-white transition-all duration-1000 ease-in-out;
  }
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes text-glow {
  0%, 100% {
    text-shadow: 0 0 3px rgba(255,255,255,0.2), 0 0 6px rgba(255,255,255,0.1), 0 0 9px rgba(255,255,255,0.05);
  }
  50% {
    text-shadow: 0 0 5px rgba(255,255,255,0.3), 0 0 10px rgba(255,255,255,0.2), 0 0 15px rgba(255,255,255,0.1);
  }
}

.animate-text-glow {
  animation: text-glow 8s ease-in-out infinite alternate; /* Slower, more elegant pulse */
}

.section-bg-enter {
  /* This class might not be needed anymore if we control background via JS/CSS variables */
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  @apply bg-secondary-800;
}

::-webkit-scrollbar-thumb {
  @apply bg-primary-500 rounded-full;
}

::-webkit-scrollbar-thumb:hover {
  @apply bg-primary-400;
}

.animated-pattern-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  background-image: radial-gradient(circle, rgba(255,255,255,0.05) 1px, transparent 1px);
  background-size: 20px 20px;
  animation: pattern-pan 60s linear infinite;
  opacity: 0.1;
}

@keyframes pattern-pan {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 100% 100%;
  }
}

/* Autofill background color fix */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
textarea:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0px 1000px #2d3748 inset !important; /* Use secondary-700 color */
    background-color: #2d3748 !important; /* Explicitly set background for non-webkit browsers */
    background-image: none !important; /* Prevent autofill background image */
    -webkit-text-fill-color: #ffffff !important; /* Ensure text color remains white */
    color: #ffffff !important; /* Added to ensure text color remains white */
    caret-color: #ffffff !important; /* Ensure caret color remains white */
    transition: background-color 5000s ease-in-out 0s !important; /* Long transition to hide autofill background change */
}

/* Disable hover effects on touch devices - FIXED VERSION */
@media (hover: none) {
  /* Only disable interactive hover effects, not background colors */
  .touch-device .group:hover .group-hover\:translate-x-1 {
    transform: none !important;
  }

  .touch-device .hover\:scale-105:hover {
    transform: none !important;
  }

  /* Keep background colors intact for buttons to prevent transparency */
  /* Remove the rules that were causing buttons to become transparent */
  
  /* Only disable color changes that are purely decorative */
  .touch-device .hover\:text-primary-400:hover {
    color: initial !important;
  }
  
  .touch-device .hover\:border-primary-600:hover {
    border-color: initial !important;
  }
  
  .touch-device .hover\:border-primary-500\/50:hover {
    border-color: initial !important;
  }
}

/* Alternative approach: Use :active instead of :hover for mobile */
@media (hover: none) {
  /* For buttons, use active state instead of hover */
  button:active {
    transform: scale(0.95);
  }
}

/* Default cursor for all elements */
* {
  cursor: default;
}

/* Interactive elements should have a pointer cursor */
button,
a,
input[type="button"],
input[type="submit"],
input[type="reset"],
[role="button"],
[role="link"],
[tabindex]:not([tabindex="-1"]) {
  cursor: pointer;
}

/* Form fields should have a text cursor */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
textarea {
  cursor: text;
}

/* Ensure children of interactive elements inherit pointer cursor */
button *,
a *,
[role="button"] *,
[role="link"] * {
  cursor: inherit;
}

.no-hover-transition * {
  transition: none !important;
  box-shadow: none !important;
}

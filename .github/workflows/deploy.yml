name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      deployments: write
      statuses: write
      pull-requests: write
      issues: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --silent

      - name: Run tests
        run: npm run test --if-present

      - name: Build project
        run: npm run build
        

      - name: Deploy to Vercel
        id: vercel-deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod --confirm'
          scope: ${{ secrets.VERCEL_ORG_ID }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}

      - name: Comment on PR (if pull request)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              const botComment = comments.find(comment => 
                comment.user.login === 'github-actions[bot]' && 
                comment.body.includes('ðŸš€ Deploy Preview')
              );
              
              const deployUrl = '${{ steps.vercel-deploy.outputs.preview-url }}' || 'Deployment in progress...';
              const commentBody = `## ðŸš€ Deploy Preview
              
              Your changes have been deployed to: ${deployUrl}
              
              Built with commit: \`${context.sha.substring(0, 7)}\`
              
              ---
              *Deployed via GitHub Actions*`;
              
              if (botComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: commentBody
                });
                console.log('Updated existing comment');
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: commentBody
                });
                console.log('Created new comment');
              }
            } catch (error) {
              console.log('Could not comment on PR:', error.message);
              // Don't fail the workflow if commenting fails
            }

      - name: Output deployment URLs
        run: |
          echo "Preview URL: ${{ steps.vercel-deploy.outputs.preview-url }}"
          echo "Production URL: ${{ steps.vercel-deploy.outputs.production-url }}"